/**
 * Spoticons
 *
 * Variable Set: Spoticons
 *
 * Styleguide 1.2.1
 */
/**
 * Common color usages
 *
 * These colors are provided because they might be needed in many places where
 * they should be synced up.
 */
/**
 * Vertical Grid System
 * --------------------
 *
 * We try to adhere to a baseline grid, which is a vertical grid with lines
 * every X pixels. The baseline of text should always fall on this line.
 */
/**
 * Horizontal Grid System
 * ----------------------
 *
 * This grid system is responsive in four sizes, where all sizes use a 12 column
 * grid.
 *
 * Since the values are calculated, you need to compile the Less code to see the
 * values. From glue, run `node tools/output-grid-values.js` to see
 * the values.
 *
 * Here's a reference for what to use the variables for:
 *
 * Min Width (including scroll bar)
 * --------------------------------
 * Including scroll bar:  $glue-screen-min
 * Excluding scroll bar:  $glue-body-width-min
 *
 * Max Width (of content, space on the sides)
 * ------------------------------------------
 * Including scroll bar:  $glue-screen-max
 * Excluding scroll bar:  $glue-body-width-max
 *
 * Page Gutter (gutter on the sides of the page)
 * ---------------------------------------------
 * Size:                  $glue-grid-page-gutter
 *
 * Extra Small (xs)
 * ----------------
 * Gutter size:           $glue-grid-column-gutter-xs
 * View width range:      $glue-screen-min to $glue-screen-xs-max
 *
 * Small (sm)
 * ----------
 * Gutter size:           $glue-grid-column-gutter-sm
 * View width range:      $glue-screen-sm-min to $glue-screen-sm-max
 *
 * Medium (md)
 * -----------
 * Gutter size:           $glue-grid-column-gutter-md
 * View width range:      $glue-screen-md-min to $glue-screen-md-max
 *
 * Large (lg)
 * ----------
 * Gutter size:           $glue-grid-column-gutter-lg
 * View width range:      $glue-screen-lg-min to $glue-screen-lg-max
 */
html {
  overflow-y: hidden;
}

html,
body {
  background: #121212;
  height: 100%;
}

#main,
.app {
  height: 100%;
}

.nav {
  border-bottom: 0;
}

.navbar {
  background: transparent;
}

.app {
  position: relative;
}

.app-header {
  height: 118px;
}

.sections {
  position: absolute;
  left: 0;
  top: 118px;
  right: 0;
  bottom: 0;
  overflow-y: scroll;
  background: #181818;
}

.close-button-container {
  position: fixed;
  top: 10px;
  right: 18px;
}

.user-container .user {
  border-bottom: 1px solid #282828;
  margin-bottom: 10px;
  padding-bottom: 10px;
}

.user-container .user > .image-wrapper {
  width: 45px;
}

.user-container .user > .name {
  padding-left: 63px;
  padding-top: 12px;
}

.user-container .user > .button-add {
  margin-top: 8px;
}

.user:first-child {
  border-top: 0;
}

.friends_tab .follow-all-container {
  margin-top: 18px;
}

.friends_tab .facebook-friends-count {
  position: relative;
  color: #ffffff;
  padding-top: 25px;
  padding-bottom: 4px;
  width: 370px;
}

.friends_tab .facebook-friends-count .facebook-icon {
  margin-right: 10px;
  width: 14px;
  border-radius: 3px;
  position: relative;
  top: -2px;
}

.filter-container {
  position: relative;
  margin-top: 16px;
  margin-bottom: 16px;
}

.filter-container .form-control {
  padding-left: 25px;
  background: #282828;
  border-color: #181818;
  color: #a0a0a0;
  height: 26px;
  padding-top: 4px;
}

.filter-container::before {
  position: absolute;
  top: 4px;
  left: 5px;
  z-index: 9;
  color: #ffffff;
  font-size: 14px;
}

hr {
  border-color: #282828;
}

.featured_tab {
  padding-top: 10px;
}

.section-error {
  position: relative;
  top: 20px;
}

.connect-to-facebook {
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  margin-top: 66px;
}

.connect-to-facebook .title {
  margin-bottom: 21px;
}

.connect-to-facebook .disclaimer {
  margin-top: 50px;
}
